{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saideep.k\\\\Downloads\\\\healthcare -uxx\\\\healthcare\\\\src\\\\context\\\\HealthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  notifications: [],\n  appointments: [{\n    id: 1,\n    title: 'Dental Checkup',\n    doctor: 'Dr. Sarah Wilson',\n    time: '09:00 AM',\n    date: '2024-03-20',\n    type: 'dental',\n    status: 'upcoming'\n  }, {\n    id: 2,\n    title: 'Heart Consultation',\n    doctor: 'Dr. Michael Chen',\n    time: '02:30 PM',\n    date: '2024-03-21',\n    type: 'cardiology',\n    status: 'confirmed'\n  }],\n  healthMetrics: {\n    heartRate: {\n      current: 72,\n      history: [70, 72, 71, 73, 72, 70, 72]\n    },\n    bloodPressure: {\n      current: '120/80',\n      history: ['118/79', '120/80', '121/81']\n    },\n    steps: {\n      current: 8432,\n      goal: 10000\n    },\n    sleep: {\n      current: 7.5,\n      goal: 8\n    },\n    water: {\n      current: 6,\n      goal: 8\n    },\n    calories: {\n      current: 1800,\n      goal: 2000\n    }\n  },\n  medications: [{\n    id: 1,\n    name: 'Vitamin D',\n    dosage: '1000 IU',\n    frequency: 'Daily',\n    timeSlots: ['09:00 AM'],\n    taken: false\n  }],\n  userPreferences: {\n    theme: 'light',\n    notifications: true,\n    language: 'en'\n  }\n};\nfunction healthReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_APPOINTMENT':\n      return {\n        ...state,\n        appointments: [...state.appointments, action.payload]\n      };\n    case 'UPDATE_HEALTH_METRIC':\n      return {\n        ...state,\n        healthMetrics: {\n          ...state.healthMetrics,\n          [action.metric]: {\n            ...state.healthMetrics[action.metric],\n            current: action.value,\n            history: [...state.healthMetrics[action.metric].history, action.value].slice(-7)\n          }\n        }\n      };\n    case 'TAKE_MEDICATION':\n      return {\n        ...state,\n        medications: state.medications.map(med => med.id === action.id ? {\n          ...med,\n          taken: true\n        } : med)\n      };\n    case 'ADD_NOTIFICATION':\n      return {\n        ...state,\n        notifications: [action.payload, ...state.notifications].slice(0, 10)\n      };\n    case 'UPDATE_PREFERENCES':\n      return {\n        ...state,\n        userPreferences: {\n          ...state.userPreferences,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n}\nexport function HealthProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(healthReducer, initialState);\n  const addAppointment = appointment => {\n    dispatch({\n      type: 'ADD_APPOINTMENT',\n      payload: appointment\n    });\n  };\n  const updateHealthMetric = (metric, value) => {\n    dispatch({\n      type: 'UPDATE_HEALTH_METRIC',\n      metric,\n      value\n    });\n  };\n  const takeMedication = id => {\n    dispatch({\n      type: 'TAKE_MEDICATION',\n      id\n    });\n  };\n  const addNotification = notification => {\n    dispatch({\n      type: 'ADD_NOTIFICATION',\n      payload: notification\n    });\n  };\n  const updatePreferences = preferences => {\n    dispatch({\n      type: 'UPDATE_PREFERENCES',\n      payload: preferences\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(HealthContext.Provider, {\n    value: {\n      state,\n      addAppointment,\n      updateHealthMetric,\n      takeMedication,\n      addNotification,\n      updatePreferences\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(HealthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = HealthProvider;\nexport const useHealth = () => {\n  _s2();\n  const context = useContext(HealthContext);\n  if (!context) {\n    throw new Error('useHealth must be used within a HealthProvider');\n  }\n  return context;\n};\n_s2(useHealth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"HealthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","HealthContext","initialState","notifications","appointments","id","title","doctor","time","date","type","status","healthMetrics","heartRate","current","history","bloodPressure","steps","goal","sleep","water","calories","medications","name","dosage","frequency","timeSlots","taken","userPreferences","theme","language","healthReducer","state","action","payload","metric","value","slice","map","med","HealthProvider","children","_s","dispatch","addAppointment","appointment","updateHealthMetric","takeMedication","addNotification","notification","updatePreferences","preferences","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useHealth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/saideep.k/Downloads/healthcare -uxx/healthcare/src/context/HealthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nconst HealthContext = createContext();\r\n\r\nconst initialState = {\r\n  notifications: [],\r\n  appointments: [\r\n    {\r\n      id: 1,\r\n      title: 'Dental Checkup',\r\n      doctor: 'Dr. Sarah Wilson',\r\n      time: '09:00 AM',\r\n      date: '2024-03-20',\r\n      type: 'dental',\r\n      status: 'upcoming'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Heart Consultation',\r\n      doctor: 'Dr. Michael Chen',\r\n      time: '02:30 PM',\r\n      date: '2024-03-21',\r\n      type: 'cardiology',\r\n      status: 'confirmed'\r\n    }\r\n  ],\r\n  healthMetrics: {\r\n    heartRate: { current: 72, history: [70, 72, 71, 73, 72, 70, 72] },\r\n    bloodPressure: { current: '120/80', history: ['118/79', '120/80', '121/81'] },\r\n    steps: { current: 8432, goal: 10000 },\r\n    sleep: { current: 7.5, goal: 8 },\r\n    water: { current: 6, goal: 8 },\r\n    calories: { current: 1800, goal: 2000 }\r\n  },\r\n  medications: [\r\n    {\r\n      id: 1,\r\n      name: 'Vitamin D',\r\n      dosage: '1000 IU',\r\n      frequency: 'Daily',\r\n      timeSlots: ['09:00 AM'],\r\n      taken: false\r\n    }\r\n  ],\r\n  userPreferences: {\r\n    theme: 'light',\r\n    notifications: true,\r\n    language: 'en'\r\n  }\r\n};\r\n\r\nfunction healthReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD_APPOINTMENT':\r\n      return {\r\n        ...state,\r\n        appointments: [...state.appointments, action.payload]\r\n      };\r\n    case 'UPDATE_HEALTH_METRIC':\r\n      return {\r\n        ...state,\r\n        healthMetrics: {\r\n          ...state.healthMetrics,\r\n          [action.metric]: {\r\n            ...state.healthMetrics[action.metric],\r\n            current: action.value,\r\n            history: [...state.healthMetrics[action.metric].history, action.value].slice(-7)\r\n          }\r\n        }\r\n      };\r\n    case 'TAKE_MEDICATION':\r\n      return {\r\n        ...state,\r\n        medications: state.medications.map(med =>\r\n          med.id === action.id ? { ...med, taken: true } : med\r\n        )\r\n      };\r\n    case 'ADD_NOTIFICATION':\r\n      return {\r\n        ...state,\r\n        notifications: [action.payload, ...state.notifications].slice(0, 10)\r\n      };\r\n    case 'UPDATE_PREFERENCES':\r\n      return {\r\n        ...state,\r\n        userPreferences: {\r\n          ...state.userPreferences,\r\n          ...action.payload\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function HealthProvider({ children }) {\r\n  const [state, dispatch] = useReducer(healthReducer, initialState);\r\n\r\n  const addAppointment = (appointment) => {\r\n    dispatch({ type: 'ADD_APPOINTMENT', payload: appointment });\r\n  };\r\n\r\n  const updateHealthMetric = (metric, value) => {\r\n    dispatch({ type: 'UPDATE_HEALTH_METRIC', metric, value });\r\n  };\r\n\r\n  const takeMedication = (id) => {\r\n    dispatch({ type: 'TAKE_MEDICATION', id });\r\n  };\r\n\r\n  const addNotification = (notification) => {\r\n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\r\n  };\r\n\r\n  const updatePreferences = (preferences) => {\r\n    dispatch({ type: 'UPDATE_PREFERENCES', payload: preferences });\r\n  };\r\n\r\n  return (\r\n    <HealthContext.Provider\r\n      value={{\r\n        state,\r\n        addAppointment,\r\n        updateHealthMetric,\r\n        takeMedication,\r\n        addNotification,\r\n        updatePreferences\r\n      }}\r\n    >\r\n      {children}\r\n    </HealthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useHealth = () => {\r\n  const context = useContext(HealthContext);\r\n  if (!context) {\r\n    throw new Error('useHealth must be used within a HealthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}